{"version":3,"sources":["components/HomePage/TFLBanner/DisrupInfo/DisrupInfo.module.scss","components/HomePage/HireBike/HeroBanner/HeroBanner.module.scss","components/HomePage/Navigation/Navigation.module.scss","components/HomePage/TFLBanner/TflInfo/TflInfo.module.scss","components/HomePage/TFLBanner/TFLBanner.module.scss","components/HomePage/HireBike/DataBanner/DataBanner.module.scss","static/loadingImage.gif","serviceWorker.js","constants/ActionTypes.js","constants/InitialState.js","constants/ContentState.js","reducers/index.js","reducers/queryContent.js","reducers/tflContent.js","constants/config.js","actions/async/requestData.js","actions/index.js","components/HomePage/Navigation/Navigation.js","components/HomePage/TFLBanner/TflInfo/TflInfo.js","components/HomePage/TFLBanner/DisrupInfo/DisrupInfo.js","components/HomePage/TFLBanner/TFLBanner.js","components/HomePage/HireBike/HeroBanner/HeroBanner.js","components/HomePage/HireBike/DataBanner/DataBanner.js","constants/data.js","components/HomePage/HomePage.js","containers/HomePageContainer/HomePageContainer.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","GET_DATACONTENT","GET_TFL_INFORMATION","state","queryContent","entries","errors","status","tflContent","fromJS","rootReducer","combineReducers","initialState","getIn","action","payload","data","type","types","set","IsSuccessful","ErrorMessage","TFL_QUERY","API_URL","getQueryValue","value","req","axios","get","getTFLInformation","defaults","withCredentials","Navigation","this","props","navItems","navigationIcon","navigation","className","s","topnav","id","classes","href","link","rel","target","imgResize","src","image","alt","length","map","nav","navInd","key","onClick","changeNav","title","React","Component","defaultProps","undefined","TflInfo","sortData","bind","allData","sort","a","b","name","modeName","tflInfo","sortedData","transport","ind","dataClick","handleClick","serviceTypes","filter","workTime","toLowerCase","lineStatuses","statusSeverity","DisrupInfo","transportSelect","infoService","linesClass","allClear","notWorking","disrupt","disIn","reason","TFLBanner","setState","tubeBanner","tubeMessage","containerBackground","HeroBanner","handleChange","e","getApiQuery","cleanData","heroBanner","heroMessage","heroForms","cv","forms","customClass","htmlFor","label","onChange","placeholder","DataBanner","cardsData","queryValue","showContent","customWidth","commonName","substring","indexOf","lat","lon","mainNav","HomePage","defaultNav","retrievedObjet","HomePageContainer","aria-label","width","height","loadingImg","connect","toJS","dispatch","bindActionCreators","store","createStore","reducer","applyMiddleware","ReduxPromise","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d84244f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoService\":\"DisrupInfo_infoService__3hdMI\",\"linesClass\":\"DisrupInfo_linesClass__eNFo3\",\"allClear\":\"DisrupInfo_allClear__jbtzO\",\"notWorking\":\"DisrupInfo_notWorking__6axfG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBackground\":\"HeroBanner_containerBackground__22L26\",\"customMargin\":\"HeroBanner_customMargin__3HAIw\",\"forms\":\"HeroBanner_forms__1TQA4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"Navigation_topnav__1fqZC\",\"imgResize\":\"Navigation_imgResize__1gmWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataClick\":\"TflInfo_dataClick__2w6eC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerBackground\":\"TFLBanner_containerBackground__sV_U2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customWidth\":\"DataBanner_customWidth__2Wtxq\"};","module.exports = __webpack_public_path__ + \"static/media/loadingImage.bb01ab84.gif\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","const GET_DATACONTENT = 'GET_DATACONTENT'\r\nconst GET_TFL_INFORMATION = 'GET_TFL_INFORMATION'\r\nexport { GET_DATACONTENT, GET_TFL_INFORMATION }\r\n","import { fromJS } from 'immutable'\r\n\r\nimport * as userState from './ContentState'\r\n\r\nconst state = {\r\n\tqueryContent: {\r\n\t\tentries: null,\r\n\t\terrors: null,\r\n\t\tstatus: userState.QUERY_CONTENT,\r\n\t},\r\n\ttflContent: {\r\n\t\tentries: null,\r\n\t\terrors: null,\r\n\t\tstatus: userState.TFL_CONTENT,\r\n\t},\r\n}\r\n\r\nexport default fromJS(state)\r\n","export const QUERY_CONTENT = 'CONTENT_RETRIEVED_01'\r\nexport const TFL_CONTENT = 'TFL_CONTENT_01'\r\n","import { combineReducers } from 'redux-immutable'\r\nimport queryContentReducer from './queryContent'\r\nimport tflContentReducer from './tflContent'\r\n\r\nconst rootReducer = combineReducers({\r\n\tqueryContent: queryContentReducer,\r\n\ttflContent: tflContentReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import * as types from '../constants/ActionTypes'\r\nimport initialState from '../constants/InitialState'\r\n\r\nexport default function queryContentReducer(state = initialState.getIn(['queryContent']), action) {\r\n\tif (action.payload && action.payload.data) {\r\n\t\tswitch (action.type) {\r\n\t\tcase types.GET_DATACONTENT:\r\n\t\t\treturn state.set('entries', action.payload.data)\r\n\t\tdefault: return state\r\n\t\t}\r\n\t} else if (action.payload && action.payload.data && !action.payload.data.IsSuccessful) {\r\n\t\tswitch (action.type) {\r\n\t\tcase types.GET_DATACONTENT:\r\n\t\t\treturn state\r\n\t\t\t\t.set('errors', action.payload.data.ErrorMessage)\r\n\t\tdefault: return state\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}\r\n","import * as types from '../constants/ActionTypes'\r\nimport initialState from '../constants/InitialState'\r\n\r\nexport default function tflContentReducer(state = initialState.getIn(['tflContent']), action) {\r\n\tif (action.payload && action.payload.data) {\r\n\t\tswitch (action.type) {\r\n\t\tcase types.GET_TFL_INFORMATION:\r\n\t\t\treturn state.set('entries', action.payload.data)\r\n\t\tdefault: return state\r\n\t\t}\r\n\t} else if (action.payload && action.payload.data && !action.payload.data.IsSuccessful) {\r\n\t\tswitch (action.type) {\r\n\t\tcase types.GET_TFL_INFORMATION:\r\n\t\t\treturn state\r\n\t\t\t\t.set('errors', action.payload.data.ErrorMessage)\r\n\t\tdefault: return state\r\n\t\t}\r\n\t}\r\n\treturn state\r\n}","/* eslint import/prefer-default-export: \"off\" */\r\nexport const TFL_QUERY = 'https://api.tfl.gov.uk/BikePoint/Search?query='\r\nexport const API_URL = 'https://api.tfl.gov.uk/Line/Mode/tube,overground,dlr/Status?detail=true'","/* eslint import/prefer-default-export: \"off\" */\r\n\r\nimport axios from 'axios'\r\nimport { TFL_QUERY, API_URL } from '../../constants/config'\r\nimport * as types from '../../constants/ActionTypes'\r\n\r\nexport function getQueryValue(value) {\r\n\tconst req = axios.get(`${TFL_QUERY}${value}`)\r\n\r\n\treturn {\r\n\t\ttype: types.GET_DATACONTENT,\r\n\t\tpayload: req,\r\n\t}\r\n}\r\n\r\nexport function getTFLInformation() {\r\n\tconst req = axios.get(API_URL)\r\n\r\n\treturn {\r\n\t\ttype: types.GET_TFL_INFORMATION,\r\n\t\tpayload: req,\r\n\t}\r\n}","import axios from 'axios'\r\n\r\naxios.defaults.withCredentials = false\r\n\r\nexport * from './async/requestData'\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './Navigation.module.scss'\r\n\r\nclass Navigation extends React.Component {\r\n\trender() {\r\n\t\tif (!this.props.navItems) return null\r\n\t\tconst { \r\n\t\t\tnavigationIcon,\r\n\t\t\tnavigation\r\n\t\t} = this.props.navItems\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<nav className={s.topnav} id={navigationIcon.id}>\r\n\t\t\t\t\t<a className={`${navigationIcon.classes && navigationIcon.classes}`} id={navigationIcon.id} href={navigationIcon.link} rel=\"noopener noreferrer\" target=\"_blank\" >\r\n\t\t\t\t\t\t<img className={s.imgResize} src={navigationIcon.image} alt={navigationIcon.alt}/>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t{navigation && navigation.length\r\n\t\t\t\t\t&& navigation.map((nav, navInd) => (\r\n\t\t\t\t\t\t<button key={`nav${navInd}`} onClick={() => this.props.changeNav(nav.id)}>{nav.title}</button>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</nav>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nNavigation.propTypes = {\r\n\tnavItems: PropTypes.objectOf(PropTypes.any),\r\n\tchangeNav: PropTypes.func,\r\n}\r\n\r\nNavigation.defaultProps = {\r\n\tnavItems: undefined,\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport s from './TflInfo.module.scss'\n\nclass TflInfo extends React.Component {\n    constructor(props) {\n\t\tsuper(props)\n\t\tthis.sortData = this.sortData.bind(this)\n    }\n    \n    sortData(allData){\n        return allData.sort((a, b) => {\n            if (a.name > b.name) return 1\n            if (a.name < b.name) return -1\n            if (a.modeName > b.modeName) return 1\n            if (a.modeName < b.modeName) return -1\n            return 0\n        })\n    }\n\n\trender() {\n\t\tif (!this.props.tflInfo) return null\n        const sortedData = this.sortData(this.props.tflInfo)\n\t\treturn (\n            <div className=\"col-5 m-5\">\n                {sortedData && sortedData.length\n                    && sortedData.map((transport, ind) => (\n                        <section key={`tlfInfo${ind}`} className={s.dataClick} onClick={() => this.props.handleClick(transport)}>\n                            <p>\n                                <strong>{transport.modeName}: </strong>{`${transport.name}`}\n                                <span>{(transport.serviceTypes.filter(workTime => (workTime.name).toLowerCase() === 'night')).length > 0 && <i className=\"fas fa-moon\"></i>}</span>\n                                <span>{(transport.lineStatuses.filter(status => status.statusSeverity !== 10)).length > 0 \n                                && <i className=\"fas fa-ban\"></i>}</span>\n                            </p>\n                        </section>\n                    ))}\n            </div>\n\t\t)\n\t}\n}\n\nTflInfo.propTypes = {\n\thandleClick: PropTypes.func,\n\ttflInfo: PropTypes.arrayOf(PropTypes.any),\n}\n\nTflInfo.defaultProps = {\n\ttflInfo: null,\n}\n\nexport default TflInfo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport s from './DisrupInfo.module.scss'\n\nclass DisrupInfo extends React.Component {\n    render() {\n        if (!this.props.transportSelect) return <div className={`col-5 m-5 ${s.infoService}`}></div>\n        const { transportSelect } = this.props\n        return (\n            <div className={`col-5 m-5 ${s.infoService}`}>\n                {transportSelect &&\n                    <section>\n                        <p className={s.linesClass}><strong className=\"h5\">Line:</strong> {transportSelect.name}</p>\n                        {(transportSelect.lineStatuses.filter(status => status.statusSeverity === 10)).length > 0\n                            ? (\n                                <p className={s.allClear}>No service disruptions</p>\n                            ) : (\n                                <div>\n                                    <p className={s.notWorking}>Service currently suffering disruptions</p>\n                                    {transportSelect.lineStatuses.map((disrupt, disIn) => (\n                                        <section key={`dis${disIn}`}>\n                                            <p><strong className=\"h5\">Reason: </strong>{disrupt.reason}</p>\n                                        </section>\n                                    ))}\n                                </div>\n                            )}\n                    </section>\n                }\n            </div>\n\n        )\n    }\n}\n\nDisrupInfo.propTypes = {\n    transportSelect: PropTypes.objectOf(PropTypes.any),\n}\n\nDisrupInfo.defaultProps = {\n    transportSelect: null,\n}\n\nexport default DisrupInfo\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TflInfo from './TflInfo/TflInfo'\r\nimport DisrupInfo from './DisrupInfo/DisrupInfo'\r\nimport s from './TFLBanner.module.scss'\r\n\r\nclass TFLBanner extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\ttransportSelect: undefined\r\n\t\t}\r\n\t\tthis.handleClick = this.handleClick.bind(this)\r\n\t}\r\n\r\n\thandleClick(transport){\r\n\t\tthis.setState({\r\n\t\t\ttransportSelect: transport,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.tubeBanner) return null\r\n\t\tconst { tubeMessage } = this.props.tubeBanner\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<div className={`container-fluid ${s.containerBackground}`}>\r\n\t\t\t\t\t<div className=\"row h-100\">\r\n\t\t\t\t\t\t<div className=\"col my-auto text-center\">\r\n\t\t\t\t\t\t\t<h1 className=\"display-4\">{tubeMessage && tubeMessage.title ? tubeMessage.title : ''}</h1>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<TflInfo tflInfo={this.props.tflInfo} handleClick={this.handleClick} />\r\n\t\t\t\t\t<DisrupInfo transportSelect={this.state.transportSelect} />\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nTFLBanner.propTypes = {\r\n\ttubeBanner: PropTypes.objectOf(PropTypes.any),\r\n\ttflInfo: PropTypes.arrayOf(PropTypes.any),\r\n}\r\n\r\nTFLBanner.defaultProps = {\r\n\ttubeBanner: null,\r\n\ttflInfo: null,\r\n}\r\n\r\nexport default TFLBanner\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './HeroBanner.module.scss'\r\n\r\nclass HeroBanner extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\t}\r\n\r\n\thandleChange(e){\r\n\t\tif(e){\r\n\t\t\tconst value = e.target.value\r\n\t\t\tif(value.length > 1){\r\n\t\t\t\tthis.props.getApiQuery(value)\r\n\t\t\t} else {\r\n\t\t\t\tthis.props.cleanData()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.heroBanner) return null\r\n\t\tconst { heroMessage, heroForms } = this.props.heroBanner\r\n\t\treturn (\r\n\t\t\t<div id=\"homePage\" className={`container-fluid ${s.containerBackground}`}>\r\n\t\t\t\t<div className=\"row h-100\">\r\n\t\t\t\t\t<div className=\"col my-auto\">\r\n\t\t\t\t\t\t<h1 className=\"display-4\">{heroMessage && heroMessage.title ? heroMessage.title : ''}</h1>\r\n\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t<div className=\"col-10 m-auto\">\r\n\t\t\t\t\t\t\t\t\t{heroForms && heroForms.length\r\n\t\t\t\t\t\t\t\t\t\t&& heroForms.map((cv, ind) => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={`main${ind}`} className={`form-group text-left ${s.forms} ${cv.customClass ? s[cv.customClass] : ''}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<label className=\"text-white\" htmlFor={cv.id}>{cv.label}</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" onChange={(e) => {this.handleChange(e)}} className=\"form-control\" id={cv.id} placeholder={cv.placeholder} />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nHeroBanner.propTypes = {\r\n\theroBanner: PropTypes.objectOf(PropTypes.any),\r\n\tgetApiQuery: PropTypes.func,\r\n\tcleanData: PropTypes.func\r\n}\r\n\r\nHeroBanner.defaultProps = {\r\n\theroBanner: null,\r\n}\r\n\r\nexport default HeroBanner\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport s from './DataBanner.module.scss'\r\n\r\nclass DataBanner extends React.Component {\r\n\trender() {\r\n\t\tconst { cardsData, queryValue, showContent } = this.props\r\n\t\tif (!cardsData) return null\r\n\t\treturn (\r\n\t\t\t<div id=\"DataBanner\" className=\"container pt-5 pb-5\">\r\n\t\t\t\t{showContent &&\r\n\t\t\t\t<section>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col text-center\">\r\n\t\t\t\t\t\t\t<h2 className=\"pb-5\">You searching at: <span className=\"text-danger\">{queryValue}</span></h2>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t\t\t{cardsData && cardsData.length\r\n\t\t\t\t\t\t\t\t&& cardsData.map((cv, ind) => (\r\n\t\t\t\t\t\t\t\t\t<div key={`map${ind}`} className={`card float-left mr-3 mb-3 ${s.customWidth}`}>\r\n\t\t\t\t\t\t\t\t\t\t<img src=\"https://wallpapercave.com/wp/66stx2A.jpg\" className=\"card-img-top\" alt=\"catPlaceholder\" />\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h6 className=\"card-title text-danger font-weight-bold\">{cv.commonName}</h6>\r\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"card-text\">{`${(cv.id).substring(((cv.id).indexOf('_') + 1))} ${cv.commonName} (${cv.lat}, ${cv.lon})`}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<a href={`https://www.google.com/maps/search/${cv.lat},${cv.lon}/${cv.lat},${cv.lon},17z`} rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-primary\">Check on Google Maps</a>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nDataBanner.propTypes = {\r\n\tcardsData: PropTypes.arrayOf(PropTypes.any),\r\n\tqueryValue: PropTypes.string,\r\n\tshowContent: PropTypes.bool\r\n}\r\n\r\nDataBanner.defaultProps = {\r\n\tcardsData: null,\r\n\tqueryValue: undefined,\r\n\tshowContent: false\r\n}\r\n\r\nexport default DataBanner\r\n","const data = {\n    heroBanner: {\n        heroMessage: {\n            title: 'Cycle hire scheme.'\n        },\n        heroForms: [{\n            label: 'Find a cycle to hire:',\n            id: 'location',\n            placeholder: 'London, SW20, Waterloo...',\n        }]\n    },\n    tubeBanner: {\n        tubeMessage: {\n            title: 'TFL Information'\n        }\n    },\n    mainNav: {\n        navigationIcon: {\n            image: 'https://www.freewheel.com/wp-content/themes/understrap-child/img/FREEWHEEL-KO.png',\n            link: 'https://www.freewheel.com/',\n            alt: 'freewheel-logo',\n            classes: 'float-left',\n            target: 'myTopnav',\n            id: 'home'\n        },\n        navigation: [{\n            title: 'Hire a Bike',\n            id: 'bikeHire'\n        }, {\n            title: 'TFL Information',\n            id: 'tflInfo'\n        }]\n    }\n}\n\nexport default data","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Navigation from './Navigation/Navigation'\r\nimport TFLBanner from './TFLBanner/TFLBanner'\r\nimport HeroBanner from './HireBike/HeroBanner/HeroBanner'\r\nimport DataBanner from './HireBike/DataBanner/DataBanner'\r\nimport data from '../../constants/data'\r\n\r\nclass HomePage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\theroBanner: undefined,\r\n\t\t\tnavItems: undefined,\r\n\t\t\ttubeBanner: undefined,\r\n\t\t\tdefaultNav: 'tflInfo'\r\n\t\t}\r\n\t\tthis.changeNav = this.changeNav.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { mainNav, heroBanner, tubeBanner } = data\r\n\t\tthis.setState({\r\n\t\t\theroBanner: heroBanner,\r\n\t\t\tnavItems: mainNav,\r\n\t\t\ttubeBanner: tubeBanner\r\n\t\t})\r\n\t}\r\n\r\n\tchangeNav(nav) {\r\n\t\tconst { defaultNav } = this.state\r\n\t\tif(defaultNav !== nav){\r\n\t\t\tthis.setState({\r\n\t\t\t\tdefaultNav: nav,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { defaultNav, navItems, tubeBanner, heroBanner } = this.state\r\n\t\tconst { \r\n\t\t\ttflInfo, \r\n\t\t\tcleanData, \r\n\t\t\tgetApiQuery, \r\n\t\t\tshowContent, \r\n\t\t\tqueryValue, \r\n\t\t\tretrievedObjet \r\n\t\t} = this.props\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<Navigation changeNav={this.changeNav} navItems={navItems} />\r\n\t\t\t\t{defaultNav === 'tflInfo' ? (\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<TFLBanner tflInfo={tflInfo} tubeBanner={tubeBanner} />\r\n\t\t\t\t\t</section>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<section>\r\n\t\t\t\t\t\t<HeroBanner cleanData={cleanData} getApiQuery={getApiQuery} heroBanner={heroBanner} />\r\n\t\t\t\t\t\t<DataBanner showContent={showContent} queryValue={queryValue} cardsData={retrievedObjet} />\r\n\t\t\t\t\t</section>\r\n\t\t\t\t)}\r\n\t\t\t</section>\r\n\t\t)\r\n\r\n\t}\r\n}\r\n\r\nHomePage.propTypes = {\r\n\tretrievedObjet: PropTypes.arrayOf(PropTypes.any),\r\n\ttflInfo: PropTypes.arrayOf(PropTypes.any),\r\n\tgetApiQuery: PropTypes.func,\r\n\tqueryValue: PropTypes.string,\r\n\tshowContent: PropTypes.bool,\r\n\tcleanData: PropTypes.func\r\n}\r\n\r\nHomePage.defaultProps = {\r\n\ttflInfo: undefined,\r\n\tretrievedObjet: undefined,\r\n\tqueryValue: undefined,\r\n\tshowContent: false\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { getQueryValue, getTFLInformation } from '../../actions'\r\nimport HomePage from '../../components/HomePage/HomePage'\r\nimport loadingImg from '../../static/loadingImage.gif' \r\n\r\nclass HomePageContainer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tqueryValue: undefined,\r\n\t\t\tshowContent: false\r\n\t\t}\r\n\t\tthis.getApiQuery = this.getApiQuery.bind(this)\r\n\t\tthis.cleanData = this.cleanData.bind(this)\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.props.getTFLInformation()\r\n\t}\r\n\r\n\tgetApiQuery(value){\r\n\t\tthis.props.getQueryValue(value)\r\n\t\tthis.setState({\r\n\t\t\tqueryValue: value,\r\n\t\t\tshowContent: true\r\n\t\t})\r\n\t}\r\n\r\n\tcleanData(){\r\n\t\tthis.setState({\r\n\t\t\tshowContent: false\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { queryValue, showContent } = this.state\r\n\t\tconst { queryContent, tflContent } = this.props\r\n\t\tif (tflContent && tflContent.entries) { \r\n\t\t\treturn (\r\n\t\t\t\t<HomePage\r\n\t\t\t\t\tqueryValue={queryValue}\r\n\t\t\t\t\tgetApiQuery={this.getApiQuery}\r\n\t\t\t\t\tretrievedObjet={queryContent.entries}\r\n\t\t\t\t\ttflInfo={tflContent.entries}\r\n\t\t\t\t\tshowContent={showContent}\r\n\t\t\t\t\tcleanData={this.cleanData}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\t} \r\n\t\treturn ( \r\n\t\t\t<section className=\"w-100 text-center pt-5 mt-5\"> \r\n\t\t\t\t<object alt=\"Loading\" aria-label=\"Loading\" className=\"mt-5\" width=\"200\" height=\"200\" data={loadingImg} /> \r\n\t\t\t</section> \r\n\t\t)\r\n\t}\r\n}\r\n\r\nHomePageContainer.propTypes = {\r\n\tgetQueryValue: PropTypes.func.isRequired,\r\n\tgetTFLInformation: PropTypes.func.isRequired,\r\n\tqueryContent: PropTypes.objectOf(PropTypes.any),\r\n\ttflContent: PropTypes.objectOf(PropTypes.any),\r\n}\r\n\r\nHomePageContainer.defaultProps = {\r\n\tqueryContent: null,\r\n\ttflContent: null,\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n\treturn {\r\n\t\tqueryContent: state.get('queryContent').toJS(),\r\n\t\ttflContent: state.get('tflContent').toJS(),\r\n\t}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n\treturn bindActionCreators({\r\n\t\tgetQueryValue,\r\n\t\tgetTFLInformation,\r\n\t}, dispatch)\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageContainer)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport ReduxPromise from 'redux-promise'\r\nimport { Provider } from 'react-redux'\r\nimport '../node_modules/bootstrap/dist/js/bootstrap'\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\r\nimport './stylesheets/globalStyles.scss'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport reducer from './reducers'\r\nimport HomePageContainer from './containers/HomePageContainer/HomePageContainer'\r\n\r\nlet store = null\r\n\r\nif (process.env.NODE_ENV && process.env.NODE_ENV === 'production') {\r\n\tstore = createStore(reducer, applyMiddleware(ReduxPromise))\r\n} else {\r\n\tconst MIDDLEWARE = applyMiddleware(ReduxPromise)\r\n\tconst DEV_TOOLS = window.devToolsExtension ? window.devToolsExtension() : f => f\r\n\tstore = createStore(reducer, compose(MIDDLEWARE, DEV_TOOLS))\r\n}\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<HomePageContainer />\r\n\t</Provider>, document.getElementById('root'),\r\n)\r\n\r\nserviceWorker.unregister()"],"sourceRoot":""}